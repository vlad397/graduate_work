version: '3'

services:
  postgres_auth:
    build:
      context: .
      dockerfile: ./postgres/Dockerfile
    container_name: postgres_auth
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - '5432:5432'
    expose:
      - '5432'
    env_file:
      - ./postgres/.env
    networks:
      - auth-network

  jaeger:
    image: jaegertracing/all-in-one
    ports:
      - "6831:6831/udp"
      - "16686:16686"
    depends_on:
      - auth_service
    restart: unless-stopped

  auth_service:
    build:
      context: .
      dockerfile: ./src/Dockerfile
    container_name: auth_service
    volumes:
      - ./src/:/usr/app/
      - static_files:/usr/app/staticfiles
    env_file:
      - ./src/.env
    networks:
      - auth-network

  nginx_auth:
    build:
      context: .
      dockerfile: ./nginx/Dockerfile
    container_name: nginx_auth
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/site.conf:/etc/nginx/conf.d/site.conf:ro
      - static_files:/home/app/staticfiles
    depends_on:
      - auth_service
    ports:
      - '80:81'
    networks:
      - auth-network

  redis_auth:
    build:
      context: .
      dockerfile: ./redis/Dockerfile
    ports:
      - '6379:6379'
    expose:
      - '6379'
    volumes:
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    container_name: redis_auth
    env_file:
      - ./redis/.env
    networks:
      - auth-network

networks:
  auth-network:
    driver: bridge

volumes:
  postgres_data:
  static_files: